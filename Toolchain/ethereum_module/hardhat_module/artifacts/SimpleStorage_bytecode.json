{
  "bytecode": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008081905550610ce3806100686000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101a8578063b08079a6146101d3578063d09de08a146101fc578063d0e30db014610213578063f2fde38b1461021d578063f8b2cb4f14610246576100a7565b806327e235e3146100ac5780632baeceb7146100e95780632e1a7d4d146101005780632e64cec1146101295780636057361d146101545780636f9fb98a1461017d575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce91906108b9565b610283565b6040516100e091906108ff565b60405180910390f35b3480156100f557600080fd5b506100fe61029b565b005b34801561010c57600080fd5b5061012760048036038101906101229190610946565b610335565b005b34801561013557600080fd5b5061013e610457565b60405161014b91906108ff565b60405180910390f35b34801561016057600080fd5b5061017b60048036038101906101769190610946565b610460565b005b34801561018957600080fd5b506101926104a3565b60405161019f91906108ff565b60405180910390f35b3480156101b457600080fd5b506101bd6104ab565b6040516101ca9190610982565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f5919061099d565b6104d1565b005b34801561020857600080fd5b506102116105bb565b005b61021b610611565b005b34801561022957600080fd5b50610244600480360381019061023f91906108b9565b610669565b005b34801561025257600080fd5b5061026d600480360381019061026891906108b9565b61080d565b60405161027a91906108ff565b60405180910390f35b60026020528060005260406000206000915090505481565b60008054116102df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d690610a3a565b60405180910390fd5b60016000808282546102f19190610a89565b925050819055507fc53a6612a7428e1fc89cb87169d69d64eaefe94f5b45d43f80f1ad9d7065d2c86000543360405161032b929190610abd565b60405180910390a1565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae90610b32565b60405180910390fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104069190610a89565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610453573d6000803e3d6000fd5b5050565b60008054905090565b806000819055507fc53a6612a7428e1fc89cb87169d69d64eaefe94f5b45d43f80f1ad9d7065d2c88133604051610498929190610abd565b60405180910390a150565b600047905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055890610bc4565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b09190610be4565b925050819055505050565b60016000808282546105cd9190610be4565b925050819055507fc53a6612a7428e1fc89cb87169d69d64eaefe94f5b45d43f80f1ad9d7065d2c860005433604051610607929190610abd565b60405180910390a1565b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106609190610be4565b92505081905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f090610bc4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075f90610c64565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08183604051610801929190610c84565b60405180910390a15050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108868261085b565b9050919050565b6108968161087b565b81146108a157600080fd5b50565b6000813590506108b38161088d565b92915050565b6000602082840312156108cf576108ce610856565b5b60006108dd848285016108a4565b91505092915050565b6000819050919050565b6108f9816108e6565b82525050565b600060208201905061091460008301846108f0565b92915050565b610923816108e6565b811461092e57600080fd5b50565b6000813590506109408161091a565b92915050565b60006020828403121561095c5761095b610856565b5b600061096a84828501610931565b91505092915050565b61097c8161087b565b82525050565b60006020820190506109976000830184610973565b92915050565b600080604083850312156109b4576109b3610856565b5b60006109c2858286016108a4565b92505060206109d385828601610931565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f742064656372656d656e742062656c6f77207a65726f0000000000600082015250565b6000610a24601b836109dd565b9150610a2f826109ee565b602082019050919050565b60006020820190508181036000830152610a5381610a17565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a94826108e6565b9150610a9f836108e6565b9250828203905081811115610ab757610ab6610a5a565b5b92915050565b6000604082019050610ad260008301856108f0565b610adf6020830184610973565b9392505050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610b1c6014836109dd565b9150610b2782610ae6565b602082019050919050565b60006020820190508181036000830152610b4b81610b0f565b9050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610bae6021836109dd565b9150610bb982610b52565b604082019050919050565b60006020820190508181036000830152610bdd81610ba1565b9050919050565b6000610bef826108e6565b9150610bfa836108e6565b9250828201905080821115610c1257610c11610a5a565b5b92915050565b7f4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373600082015250565b6000610c4e6020836109dd565b9150610c5982610c18565b602082019050919050565b60006020820190508181036000830152610c7d81610c41565b9050919050565b6000604082019050610c996000830185610973565b610ca66020830184610973565b939250505056fea2646970667358221220daa69e3c4adb9d1b600585c64daae1916650454494d677de63039d862d5fe7b564736f6c63430008130033",
  "bytecode_runtime": "",
  "source_code": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ncontract SimpleStorage {\n    uint256 private storedValue;\n    address public owner;\n    mapping(address => uint256) public balances;\n    \n    event ValueChanged(uint256 newValue, address changedBy);\n    event OwnershipTransferred(address previousOwner, address newOwner);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        storedValue = 0;\n    }\n    \n    function store(uint256 value) public {\n        storedValue = value;\n        emit ValueChanged(value, msg.sender);\n    }\n    \n    function retrieve() public view returns (uint256) {\n        return storedValue;\n    }\n    \n    function increment() public {\n        storedValue += 1;\n        emit ValueChanged(storedValue, msg.sender);\n    }\n    \n    function decrement() public {\n        require(storedValue > 0, \"Cannot decrement below zero\");\n        storedValue -= 1;\n        emit ValueChanged(storedValue, msg.sender);\n    }\n    \n    function addToBalance(address account, uint256 amount) public onlyOwner {\n        balances[account] += amount;\n    }\n    \n    function getBalance(address account) public view returns (uint256) {\n        return balances[account];\n    }\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"New owner cannot be zero address\");\n        address previousOwner = owner;\n        owner = newOwner;\n        emit OwnershipTransferred(previousOwner, newOwner);\n    }\n    \n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n    }\n    \n    function withdraw(uint256 amount) public {\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\n        balances[msg.sender] -= amount;\n        payable(msg.sender).transfer(amount);\n    }\n    \n    function getContractBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}"
}