{
  "bytecode": "6080604052604051620009b6380380620009b68339818101604052810190620000299190620001c4565b670de0b6b3a76400003410156200003f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002819055508043620000d591906200024f565b6003819055505050506200028a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011682620000e9565b9050919050565b620001288162000109565b81146200013457600080fd5b50565b60008151905062000148816200011d565b92915050565b6000819050919050565b62000163816200014e565b81146200016f57600080fd5b50565b600081519050620001838162000158565b92915050565b6000819050919050565b6200019e8162000189565b8114620001aa57600080fd5b50565b600081519050620001be8162000193565b92915050565b600080600060608486031215620001e057620001df620000e4565b5b6000620001f08682870162000137565b9350506020620002038682870162000172565b92505060406200021686828701620001ad565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200025c8262000189565b9150620002698362000189565b925082820190508082111562000284576200028362000220565b5b92915050565b61071c806200029a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806309bd5a601461005c5780632b7ac3f31461007a5780634c2612471461009857806370dea79a146100b45780638da5cb5b146100be575b600080fd5b6100646100dc565b6040516100719190610381565b60405180910390f35b6100826100e2565b60405161008f91906103dd565b60405180910390f35b6100b260048036038101906100ad9190610552565b610108565b005b6100bc610265565b005b6100c6610344565b6040516100d391906103dd565b60405180910390f35b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016057600080fd5b60025481604051602001610174919061060c565b604051602081830303815290604052805190602001201461019457600080fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516101db90610654565b60006040518083038185875af1925050503d8060008114610218576040519150601f19603f3d011682016040523d82523d6000602084013e61021d565b606091505b5050905080610261576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610258906106c6565b60405180910390fd5b5050565b600354431161027357600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516102bb90610654565b60006040518083038185875af1925050503d80600081146102f8576040519150601f19603f3d011682016040523d82523d6000602084013e6102fd565b606091505b5050905080610341576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610338906106c6565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61037b81610368565b82525050565b60006020820190506103966000830184610372565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c78261039c565b9050919050565b6103d7816103bc565b82525050565b60006020820190506103f260008301846103ce565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61045f82610416565b810181811067ffffffffffffffff8211171561047e5761047d610427565b5b80604052505050565b60006104916103f8565b905061049d8282610456565b919050565b600067ffffffffffffffff8211156104bd576104bc610427565b5b6104c682610416565b9050602081019050919050565b82818337600083830152505050565b60006104f56104f0846104a2565b610487565b90508281526020810184848401111561051157610510610411565b5b61051c8482856104d3565b509392505050565b600082601f8301126105395761053861040c565b5b81356105498482602086016104e2565b91505092915050565b60006020828403121561056857610567610402565b5b600082013567ffffffffffffffff81111561058657610585610407565b5b61059284828501610524565b91505092915050565b600081519050919050565b600081905092915050565b60005b838110156105cf5780820151818401526020810190506105b4565b60008484015250505050565b60006105e68261059b565b6105f081856105a6565b93506106008185602086016105b1565b80840191505092915050565b600061061882846105db565b915081905092915050565b600081905092915050565b50565b600061063e600083610623565b91506106498261062e565b600082019050919050565b600061065f82610631565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006106b0601083610669565b91506106bb8261067a565b602082019050919050565b600060208201905081810360008301526106df816106a3565b905091905056fea2646970667358221220d0e5b4087a8b65c6dc4984e4b5ae997aefece022f2adef340f1e184e8a6bc0cf64736f6c63430008120033",
  "bytecode_runtime": "",
  "source_code": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ncontract HTLC {\n   address payable public owner;  \n   address payable public verifier;\n   bytes32 public hash;\n   uint reveal_timeout;\n       \n   constructor(address payable v, bytes32 h, uint delay) payable {\n       require (msg.value >= 1 ether);\n       owner = payable(msg.sender);\n       verifier = v;\n       hash = h;\n       reveal_timeout = block.number + delay;\n   }\n\n   function reveal(string memory s) public {\n       require (msg.sender==owner);\n       require(keccak256(abi.encodePacked(s))==hash);\n       (bool success,) = owner.call{value: address(this).balance}(\"\");\n       require (success, \"Transfer failed.\");\n   }\n\n   function timeout() public {\n       require (block.number > reveal_timeout);\n       (bool success,) = verifier.call{value: address(this).balance}(\"\");\n       require (success, \"Transfer failed.\");\n   }\n}\n"
}