{
  "bytecode": "608060405234801561001057600080fd5b50610728806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063159c13ad146100515780631bb8305d1461006d5780634d09c7e714610089578063c6321dc3146100a7575b600080fd5b61006b6004803603810190610066919061040e565b6100c5565b005b6100876004803603810190610082919061044f565b6100df565b005b6100916100f9565b60405161009e9190610524565b60405180910390f35b6100af610187565b6040516100bc9190610502565b60405180910390f35b80600090805190602001906100db929190610215565b5050565b80600190805190602001906100f592919061029b565b5050565b6001805461010690610651565b80601f016020809104026020016040519081016040528092919081815260200182805461013290610651565b801561017f5780601f106101545761010080835404028352916020019161017f565b820191906000526020600020905b81548152906001019060200180831161016257829003601f168201915b505050505081565b6000805461019490610651565b80601f01602080910402602001604051908101604052809291908181526020018280546101c090610651565b801561020d5780601f106101e25761010080835404028352916020019161020d565b820191906000526020600020905b8154815290600101906020018083116101f057829003601f168201915b505050505081565b82805461022190610651565b90600052602060002090601f016020900481019282610243576000855561028a565b82601f1061025c57805160ff191683800117855561028a565b8280016001018555821561028a579182015b8281111561028957825182559160200191906001019061026e565b5b5090506102979190610321565b5090565b8280546102a790610651565b90600052602060002090601f0160209004810192826102c95760008555610310565b82601f106102e257805160ff1916838001178555610310565b82800160010185558215610310579182015b8281111561030f5782518255916020019190600101906102f4565b5b50905061031d9190610321565b5090565b5b8082111561033a576000816000905550600101610322565b5090565b600061035161034c84610577565b610546565b90508281526020810184848401111561036957600080fd5b61037484828561060f565b509392505050565b600061038f61038a846105a7565b610546565b9050828152602081018484840111156103a757600080fd5b6103b284828561060f565b509392505050565b600082601f8301126103cb57600080fd5b81356103db84826020860161033e565b91505092915050565b600082601f8301126103f557600080fd5b813561040584826020860161037c565b91505092915050565b60006020828403121561042057600080fd5b600082013567ffffffffffffffff81111561043a57600080fd5b610446848285016103ba565b91505092915050565b60006020828403121561046157600080fd5b600082013567ffffffffffffffff81111561047b57600080fd5b610487848285016103e4565b91505092915050565b600061049b826105d7565b6104a581856105ed565b93506104b581856020860161061e565b6104be816106e1565b840191505092915050565b60006104d4826105e2565b6104de81856105fe565b93506104ee81856020860161061e565b6104f7816106e1565b840191505092915050565b6000602082019050818103600083015261051c8184610490565b905092915050565b6000602082019050818103600083015261053e81846104c9565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561056d5761056c6106b2565b5b8060405250919050565b600067ffffffffffffffff821115610592576105916106b2565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156105c2576105c16106b2565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561063c578082015181840152602081019050610621565b8381111561064b576000848401525b50505050565b6000600282049050600182168061066957607f821691505b6020821081141561067d5761067c610683565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122085b869eb7b32268e8f6d59cb8ee7f3190b203b027b06fb6b931e96887a40d7b264736f6c63430008000033",
  "bytecode_runtime": "",
  "source_code": "// SPDX-License-Identifier: GPL-3.0\n// \u2191 Licenza open source richiesta da Ethereum\n// GPL-3.0 = GNU General Public License versione 3\n// Senza questa riga, il compilatore da WARNING\n\npragma solidity ^0.8.0;\n// \u2191 Definisce la versione del compilatore Solidity\n// ^0.8.0 = Compatibile con versioni 0.8.0 fino a 0.9.0 (esclusa)\n// pragma = direttiva di compilazione (come #include in C)\n\ncontract Storage {\n// \u2191 Definisce un nuovo contratto chiamato \"Storage\"\n// contract = parola chiave come \"class\" in altri linguaggi\n// Storage = nome del contratto (deve essere uguale al nome file)\n// { inizia il corpo del contratto\n\n    bytes public byteSequence;\n    // \u2191 Variabile di stato (salvata permanentemente sulla blockchain)\n    // bytes = array dinamico di byte (come Vec<u8> in Rust)\n    // public = visibilit\u00e0 pubblica, crea automaticamente getter function\n    // byteSequence = nome della variabile\n    // Salvata nello storage slot 0 della blockchain\n    \n    string public textString;\n    // \u2191 Seconda variabile di stato per memorizzare testo\n    // string = sequenza di caratteri UTF-8 (internamente \u00e8 bytes)\n    // public = crea automaticamente function textString() returns (string)\n    // textString = nome della variabile\n    // Salvata nello storage slot 1 della blockchain\n\n    function storeBytes(bytes memory _byteSequence) public {\n    // \u2191 Definisce una funzione pubblica per salvare bytes\n    // function = parola chiave per dichiarare funzione\n    // storeBytes = nome della funzione\n    // bytes memory _byteSequence = parametro di input\n    //   - bytes = tipo di dato\n    //   - memory = locazione in memoria temporanea (non storage)\n    //   - _byteSequence = nome del parametro (underscore \u00e8 convenzione)\n    // public = chiunque pu\u00f2 chiamare questa funzione\n    // { inizia il corpo della funzione\n    \n        byteSequence = _byteSequence;\n        // \u2191 Assegnazione che copia i dati da memory a storage\n        // byteSequence = variabile di stato (storage slot 0)\n        // _byteSequence = parametro della funzione (memory)\n        // = operatore di assegnazione (copia automatica memory \u2192 storage)\n        // Questa operazione COSTA GAS perch\u00e9 modifica la blockchain\n    }\n    // \u2191 Fine della funzione storeBytes\n\n    function storeString(string memory _textString) public {\n    // \u2191 Funzione per salvare stringhe di testo\n    // function storeString = nome della funzione\n    // string memory _textString = parametro stringa in memoria temporanea\n    // public = accessibile dall'esterno del contratto\n    \n        textString = _textString;\n        // \u2191 Copia la stringa da memory a storage permanente\n        // textString = variabile di stato (storage slot 1)\n        // _textString = parametro ricevuto (memory)\n        // Operazione costosa in gas perch\u00e9 scrive sulla blockchain\n    }\n    // \u2191 Fine della funzione storeString\n\n}\n// \u2191 Fine del contratto Storage"
}