{
  "bytecode": "60806040523480156200001157600080fd5b506040516200189238038062001892833981810160405281019062000037919062000294565b60008060006101000a81548160ff021916908360028111156200005f576200005e620002fa565b5b021790555081600190816200007591906200056a565b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600581905550505062000651565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012f82620000e4565b810181811067ffffffffffffffff82111715620001515762000150620000f5565b5b80604052505050565b600062000166620000c6565b905062000174828262000124565b919050565b600067ffffffffffffffff821115620001975762000196620000f5565b5b620001a282620000e4565b9050602081019050919050565b60005b83811015620001cf578082015181840152602081019050620001b2565b60008484015250505050565b6000620001f2620001ec8462000179565b6200015a565b905082815260208101848484011115620002115762000210620000df565b5b6200021e848285620001af565b509392505050565b600082601f8301126200023e576200023d620000da565b5b815162000250848260208601620001db565b91505092915050565b6000819050919050565b6200026e8162000259565b81146200027a57600080fd5b50565b6000815190506200028e8162000263565b92915050565b60008060408385031215620002ae57620002ad620000d0565b5b600083015167ffffffffffffffff811115620002cf57620002ce620000d5565b5b620002dd8582860162000226565b9250506020620002f0858286016200027d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037c57607f821691505b60208210810362000392576200039162000334565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003fc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003bd565b620004088683620003bd565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200044b620004456200043f8462000259565b62000420565b62000259565b9050919050565b6000819050919050565b62000467836200042a565b6200047f620004768262000452565b848454620003ca565b825550505050565b600090565b6200049662000487565b620004a38184846200045c565b505050565b5b81811015620004cb57620004bf6000826200048c565b600181019050620004a9565b5050565b601f8211156200051a57620004e48162000398565b620004ef84620003ad565b81016020851015620004ff578190505b620005176200050e85620003ad565b830182620004a8565b50505b505050565b600082821c905092915050565b60006200053f600019846008026200051f565b1980831691505092915050565b60006200055a83836200052c565b9150826002028217905092915050565b620005758262000329565b67ffffffffffffffff811115620005915762000590620000f5565b5b6200059d825462000363565b620005aa828285620004cf565b600060209050601f831160018114620005e25760008415620005cd578287015190505b620005d985826200054c565b86555062000649565b601f198416620005f28662000398565b60005b828110156200061c57848901518255600182019150602085019450602081019050620005f5565b868310156200063c578489015162000638601f8916826200052c565b8355505b6001600288020188555050505b505050505050565b61123180620006616000396000f3fe6080604052600436106100915760003560e01c806362ea82db1161005957806362ea82db1461013857806391f901571461017557806395805dad146101a0578063d57bde79146101c9578063efbe1c1c146101f457610091565b806308551a53146100965780631998aeef146100c15780632812988f146100cb5780633197cbb6146100f65780633ccfd60b14610121575b600080fd5b3480156100a257600080fd5b506100ab61020b565b6040516100b89190610ae1565b60405180910390f35b6100c9610231565b005b3480156100d757600080fd5b506100e0610486565b6040516100ed9190610b8c565b60405180910390f35b34801561010257600080fd5b5061010b610514565b6040516101189190610bc7565b60405180910390f35b34801561012d57600080fd5b5061013661051a565b005b34801561014457600080fd5b5061015f600480360381019061015a9190610c25565b6106c7565b60405161016c9190610bc7565b60405180910390f35b34801561018157600080fd5b5061018a6106df565b6040516101979190610c61565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c29190610ca8565b610705565b005b3480156101d557600080fd5b506101de610854565b6040516101eb9190610bc7565b60405180910390f35b34801561020057600080fd5b5061020961085a565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001600281111561024557610244610cd5565b5b60008054906101000a900460ff16600281111561026557610264610cd5565b5b146102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610d76565b60405180910390fd5b60035442106102e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e090610de2565b60405180910390fd5b600554341161032d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032490610e74565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103ec5760055460066000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461043c5761043b61051a565b5b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600581905550565b6001805461049390610ec3565b80601f01602080910402602001604051908101604052809291908181526020018280546104bf90610ec3565b801561050c5780601f106104e15761010080835404028352916020019161050c565b820191906000526020600020905b8154815290600101906020018083116104ef57829003601f168201915b505050505081565b60035481565b6000600281111561052e5761052d610cd5565b5b60008054906101000a900460ff16600281111561054e5761054d610cd5565b5b0361058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058590610f40565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161063d90610f91565b60006040518083038185875af1925050503d806000811461067a576040519150601f19603f3d011682016040523d82523d6000602084013e61067f565b606091505b50509050806106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90610ff2565b60405180910390fd5b5050565b60066020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600281111561071957610718610cd5565b5b60008054906101000a900460ff16600281111561073957610738610cd5565b5b14610779576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107709061105e565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610809576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610800906110ca565b60405180910390fd5b60016000806101000a81548160ff0219169083600281111561082e5761082d610cd5565b5b02179055506001816108409190611119565b4261084b919061115b565b60038190555050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e1906110ca565b60405180910390fd5b600160028111156108fe576108fd610cd5565b5b60008054906101000a900460ff16600281111561091e5761091d610cd5565b5b1461095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590610f40565b60405180910390fd5b6003544210156109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a906111db565b60405180910390fd5b60026000806101000a81548160ff021916908360028111156109c8576109c7610cd5565b5b02179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600554604051610a1790610f91565b60006040518083038185875af1925050503d8060008114610a54576040519150601f19603f3d011682016040523d82523d6000602084013e610a59565b606091505b5050905080610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9490610ff2565b60405180910390fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610acb82610aa0565b9050919050565b610adb81610ac0565b82525050565b6000602082019050610af66000830184610ad2565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b36578082015181840152602081019050610b1b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b5e82610afc565b610b688185610b07565b9350610b78818560208601610b18565b610b8181610b42565b840191505092915050565b60006020820190508181036000830152610ba68184610b53565b905092915050565b6000819050919050565b610bc181610bae565b82525050565b6000602082019050610bdc6000830184610bb8565b92915050565b600080fd5b6000610bf282610aa0565b9050919050565b610c0281610be7565b8114610c0d57600080fd5b50565b600081359050610c1f81610bf9565b92915050565b600060208284031215610c3b57610c3a610be2565b5b6000610c4984828501610c10565b91505092915050565b610c5b81610be7565b82525050565b6000602082019050610c766000830184610c52565b92915050565b610c8581610bae565b8114610c9057600080fd5b50565b600081359050610ca281610c7c565b92915050565b600060208284031215610cbe57610cbd610be2565b5b6000610ccc84828501610c93565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f41756374696f6e206e6f742073746172746564206f7220616c7265616479206360008201527f6c6f736564000000000000000000000000000000000000000000000000000000602082015250565b6000610d60602583610b07565b9150610d6b82610d04565b604082019050919050565b60006020820190508181036000830152610d8f81610d53565b9050919050565b7f42696464696e672074696d652065787069726564000000000000000000000000600082015250565b6000610dcc601483610b07565b9150610dd782610d96565b602082019050919050565b60006020820190508181036000830152610dfb81610dbf565b9050919050565b7f76616c7565206d7573742062652067726561746572207468616e20686967686560008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e5e602283610b07565b9150610e6982610e02565b604082019050919050565b60006020820190508181036000830152610e8d81610e51565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610edb57607f821691505b602082108103610eee57610eed610e94565b5b50919050565b7f41756374696f6e206e6f74207374617274656400000000000000000000000000600082015250565b6000610f2a601383610b07565b9150610f3582610ef4565b602082019050919050565b60006020820190508181036000830152610f5981610f1d565b9050919050565b600081905092915050565b50565b6000610f7b600083610f60565b9150610f8682610f6b565b600082019050919050565b6000610f9c82610f6e565b9150819050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b6000610fdc601083610b07565b9150610fe782610fa6565b602082019050919050565b6000602082019050818103600083015261100b81610fcf565b9050919050565b7f41756374696f6e20616c72656164792073746172746564000000000000000000600082015250565b6000611048601783610b07565b915061105382611012565b602082019050919050565b600060208201905081810360008301526110778161103b565b9050919050565b7f4f6e6c79207468652073656c6c65720000000000000000000000000000000000600082015250565b60006110b4600f83610b07565b91506110bf8261107e565b602082019050919050565b600060208201905081810360008301526110e3816110a7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061112482610bae565b915061112f83610bae565b925082820261113d81610bae565b91508282048414831517611154576111536110ea565b5b5092915050565b600061116682610bae565b915061117183610bae565b9250828201905080821115611189576111886110ea565b5b92915050565b7f41756374696f6e206e6f7420656e646564000000000000000000000000000000600082015250565b60006111c5601183610b07565b91506111d08261118f565b602082019050919050565b600060208201905081810360008301526111f4816111b8565b905091905056fea2646970667358221220dd725607c6bdbf2a0541cddbbea99498ce0235fa8a0b8425d42d05ac191ca0af64736f6c63430008110033",
  "bytecode_runtime": "",
  "source_code": "// SPDX-License-Identifier: MIT\n// adapted from https://solidity-by-example.org/app/english-auction/\n\npragma solidity ^0.8.17;\n\ncontract auction {\n    enum States{WAIT_START, WAIT_CLOSING, CLOSED}\n    States state;\n\n    string public object;\n    address payable public seller;\n    uint public endTime;\n    address public highestBidder;\n    uint public highestBid;\n\n    mapping(address => uint) public bids;\n\n    constructor(string memory _object, uint _startingBid) {\n        state = States.WAIT_START;\n        object = _object;\n        seller = payable(msg.sender);\n        highestBid = _startingBid;\n    }\n\n    function start(uint _duration) external {\n        require(state == States.WAIT_START, \"Auction already started\");\n        require(msg.sender == seller, \"Only the seller\");\n        state = States.WAIT_CLOSING;\n        endTime = block.timestamp + (_duration * 1 seconds);\n    }\n\n    function bid() external payable {\n        require(state == States.WAIT_CLOSING, \"Auction not started or already closed\");\n        require(block.timestamp < endTime, \"Bidding time expired\");\n        require(msg.value > highestBid, \"value must be greater than highest\");\n\n        // Previous highestBid goes in the list.\n        if (highestBidder != address(0)) {\n            bids[highestBidder] = highestBid;\n        }\n\n        // if a participant makes a new bid, the previous one is automatically withdrawn\n        if (bids[msg.sender] != 0) {\n            withdraw();\n        }\n\n        highestBidder = msg.sender;\n        highestBid = msg.value;\n    }\n\n    function withdraw() public {\n        require(state != States.WAIT_START, \"Auction not started\");\n        uint bal = bids[msg.sender];\n        bids[msg.sender] = 0;\n        (bool success, ) = payable(msg.sender).call{value: bal}(\"\");\n        require(success, \"Transfer failed.\");\n\n    }\n\n    function end() external {\n        require(msg.sender == seller, \"Only the seller\");\n        require(state == States.WAIT_CLOSING, \"Auction not started\");\n        require(block.timestamp >= endTime, \"Auction not ended\");\n        state = States.CLOSED;\n        (bool success, ) = seller.call{value: highestBid}(\"\");\n        require(success, \"Transfer failed.\");\n    }\n\n}"
}